---
- hosts: all
  become: yes
  pre_tasks:
    - name: Check mandatory variables
      assert:
        that: ({{ item }} is defined) and ({{ item }}|length > 0)
      loop:
        - shecan_dns_1
        - shecan_dns_2
  tasks:
    - name: Install python-apt using apt
      apt:
        name: python-apt
        state: latest
        update_cache: yes
        force_apt_get: yes
    - name: Install aptitude using apt
      apt:
        name: aptitude
        state: latest
        update_cache: yes
        force_apt_get: yes
    - name: Update apt cache
      apt:
        update_cache: yes
    - name: Install required system packages
      apt:
        name: "{{ item }}"
        state: latest
        update_cache: no
      loop:
        - apt-transport-https
        - ca-certificates
        - curl
        - software-properties-common
        - python3-pip
        - virtualenv
        - python3-setuptools
        - docker-compose
        - python3-dev
        - sshpass
        - cron
    - name: Set Shecan
      shell: "echo '### Shecan DNS ###\nnameserver {{ shecan_dns_1 }}\nnameserver {{ shecan_dns_2 }}' > /etc/resolv.conf"
    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu bionic stable
        state: present
    - name: Update apt and install docker-ce
      apt:
        update_cache: yes
        name: docker-ce
        state: latest
    - name: Install ansible docker_compose module dependencies
      pip:
        name:
          - docker==4.2.0
          - docker-compose==1.25.5
          - PyYAML==5.3.1
        extra_args: --user
        executable: /usr/bin/pip
    - name: Add user to docker group
      user:
        name: "{{ ansible_user }}"
        groups:
          - docker
          - sudo
    # Ansible 'service' module didn't work after 1 week try!
    - name: Restart docker manually!
      shell: "service docker start"
    - name: Add docker system prune cronjob
      cron:
        name: docker GC
        minute: 0
        hour: 2
        weekday: 0
        job: "/usr/bin/docker system prune -a"
    - name: Post check
      command: "{{ item }}"
      loop:
        - docker info
        - docker-compose --version
